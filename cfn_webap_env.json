{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Parameters" : {
    "SshLocation" : {
      "Type" : "String",
      "Default" : "x.x.x.x/x",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "MaxLength": "18",
      "MinLength": "9",
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "KeyName": {
      "Type": "String",
      "Default": "sample-key",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "MaxLength": "255",
      "MinLength": "1",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    "LinuxImageId" : {
      "Type" : "String",
      "Default" : "ami-56d4ad31",
      "Description" : "Amazon Linux EC2 image id",
      "ConstraintDescription" : "must be a valid EC2 image id."
    },
    "LinuxInstanceType" : {
      "Type" : "String",
      "Default" : "m4.large",
      "Description" : "Linux EC2 instance type",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "DBInstanceClass" : {
      "Type" : "String",
      "Default" : "db.t1.micro",
      "Description" : "RDS instance class",
      "ConstraintDescription" : "must be a valid RDS instance class."
    },
    "DBUsername": {
      "Type": "String",
      "Default": "mysqlAdmin",
      "NoEcho": "true",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "MaxLength": "16",
      "MinLength": "1",
      "Description" : "Username for MySQL database access",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "Type": "String",
      "Default": "mysqlAdmin1234",
      "NoEcho": "true",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "MaxLength": "41",
      "MinLength": "1",
      "Description" : "Password MySQL database access",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    }
  },
  "Resources" : {
    "sampleVPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default",
        "Tags" : [ {"Key" : "Name", "Value" : "sample-vpc"} ]
      }
    },
    "sampleInternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "sample-igw"} ]
      }
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
          "InternetGatewayId" : { "Ref" : "sampleInternetGateway" }
      }
    },
    "sampleSubnet0" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "CidrBlock" : "10.0.0.0/24",
        "AvailabilityZone" : "ap-northeast-1a",
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [ { "Key" : "Name", "Value" : "sample-vpc-subnet0" } ]
      }
    },
    "sampleSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "CidrBlock" : "10.0.1.0/24",
        "AvailabilityZone" : "ap-northeast-1c",
        "MapPublicIpOnLaunch" : "true",
          "Tags" : [ { "Key" : "Name", "Value" : "sample-vpc-subnet1" } ]
      }
    },
    "sampleRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "sample-vpc-rt" } ]
      }
    },
    "internetRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "sampleRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "sampleInternetGateway" }
      }
    },
    "sampleSubnet0SampleRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "sampleSubnet0" },
        "RouteTableId" : { "Ref" : "sampleRouteTable" }
      }
    },
    "sampleSubnet1SampleRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "sampleSubnet1" },
        "RouteTableId" : { "Ref" : "sampleRouteTable" }
      }
    },
    "sampleNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "sample-vpc-acl" } ]
      }
    },
    "sampleInBoundNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "sampleNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1" },
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "sampleOutBoundNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "sampleNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1" },
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "sampleSubnet0NetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "sampleSubnet0" },
        "NetworkAclId" : { "Ref" : "sampleNetworkAcl" }
      }
    },
    "sampleSubnet1NetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "sampleSubnet1" },
        "NetworkAclId" : { "Ref" : "sampleNetworkAcl" }
      }
    },
    "defaultSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "GroupDescription" : "Allow all communications in VPC",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "default-sg"} ]
      }
    },
    "sshSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : { "Ref" : "SshLocation" } }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "ssh-sg"} ]
      }
    },
    "publicWebSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "sampleVPC" },
        "GroupDescription" : "Public Security Group with HTTP access on port 443 from the internet",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "public-web-sg"} ]
      }
    },
    "appSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : {"Ref" : "sampleVPC"},
        "GroupDescription" : "Marker security group for Application server.",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Fn::GetAtt" : [ "publicWebSecurityGroup" , "GroupId" ] } }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "app-sg"} ]
      }
    },
    "dbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : {"Ref" : "sampleVPC"},
        "GroupDescription" : "Marker security group for RDS.",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Fn::GetAtt" : [ "appSecurityGroup" , "GroupId" ] } }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "db-sg"} ]
      }
    },
    "sampleDBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "description",
        "SubnetIds" : [
          { "Ref" : "sampleSubnet0" },
          { "Ref" : "sampleSubnet1" }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "sample-db-sng"} ]
      }
    },
    "sampleMySQL" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "AllocatedStorage" : "100",
        "BackupRetentionPeriod" : "",
        "DBInstanceClass" : { "Ref" : "DBInstanceClass" },
        "DBName" : "sample_db",
        "DBSubnetGroupName" : { "Ref" : "sampleDBSubnetGroup" },
        "Engine" : "MySQL",
        "EngineVersion" : "5.6.27",
        "MasterUsername" : { "Ref" : "DBUsername" },
        "MasterUserPassword" : { "Ref" : "DBPassword" },
        "MultiAZ" : true,
        "PubliclyAccessible" : false,
        "VPCSecurityGroups" : [ { "Ref" : "dbSecurityGroup" } ],
        "Tags" : [ { "Key" : "Name", "Value" : "sample-mysql" } ]
      }
    },
    "sampleEC2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "PowerUserPolicy",
          "PolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": "*",
              "Resource": "*"
            } ]
          }
        } ]
      }
    },
    "sampleEC2Profile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path": "/",
        "Roles" : [ { "Ref" : "sampleEC2Role" } ]
      }
    },
    "sampleEC2" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "Install" : [ "Install" ]
          },
          "Install" : {
            "packages" : {
              "yum" : {
                "mysql" : []
              }
            }
          }
        }
      },
      "Properties" : {
        "AvailabilityZone" : "ap-northeast-1a",
        "IamInstanceProfile" : { "Ref" : "sampleEC2Profile" },
        "ImageId" : { "Ref" : "LinuxImageId" },
        "InstanceInitiatedShutdownBehavior" : "stop",
        "InstanceType" : { "Ref" : "LinuxInstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "SecurityGroupIds" : [
          { "Fn::GetAtt" : [ "appSecurityGroup" , "GroupId" ] },
          { "Fn::GetAtt" : [ "sshSecurityGroup" , "GroupId" ] }
        ],
        "SubnetId" : { "Ref" : "sampleSubnet0" },
        "Tags" : [ { "Key" : "Name", "Value" : "sample-ec2" } ],
        "Tenancy" : "default",
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Install the files and packages from the metadata\n",
          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource sampleEC2 ",
          "         --configsets Install ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n"
        ]]}}
      }
    }
  }
}
